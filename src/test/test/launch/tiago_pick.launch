<?xml version="1.0"?>
<launch>

    <arg name="pddl_action_name" default="grasp" />
    <arg name="knowledge_base" default="rosplan_knowledge_base" />
    <arg name="action_server" default="/move_base" />
    <!-- <arg name="pddl_action_name" default="goto_waypoint" /> -->
    <arg name="action_dispatch_topic" default="/rosplan_plan_dispatcher/action_dispatch" />
    <arg name="action_feedback_topic" default="/rosplan_plan_dispatcher/action_feedback" />

    <!-- marker detector -->
    <node pkg="aruco_ros" type="single" name="aruco_single">
        <remap from="/camera_info" to="/xtion/rgb/camera_info" />
        <remap from="/image" to="/xtion/rgb/image_rect_color" />
        <param name="image_is_rectified" value="True" />
        <param name="marker_size" value="0.045" />
        <param name="marker_id" value="582" />
        <param name="reference_frame" value="/base_footprint" /> <!-- frame in which the marker pose will be expressed -->
        <param name="camera_frame" value="xtion_rgb_optical_frame" />
        <param name="marker_frame" value="aruco_frame" />
        <param name="corner_refinement" value="SUBPIX" />
    </node>

    <!-- Load definition of pregrasp motion into play_motion namespace -->
    <rosparam command="load" file="$(find test)/config/pick_motions.yaml" />

    <!-- Pick & place server -->
    <node name="pick_and_place_server" pkg="rosplane" type="pick_and_place_server.py" output="screen">
        <rosparam command="load" file="$(find tiago_pick_demo)/config/pick_and_place_params.yaml" />
        <param name="object_width" value="0.05" />
        <param name="object_height" value="0.1" />
        <param name="object_depth" value="0.05" />
    </node>

    <!-- Node exposing service to start looking for the object and trigger the picking -->
    <!-- <node name="pick_client" pkg="tiago_pick_demo" type="pick_client.py" output="screen" /> -->
    <!-- <node name="pick_action_interface" pkg="rosplane" type="pickup_action_node" output="screen">
        <param name="knowledge_base" value="rosplan_knowledge_base" />
        <param name="pddl_action_name" value="$(arg pddl_action_name)" />
        <param name="action_dispatch_topic" value="/rosplan_plan_dispatcher/action_dispatch" />
        <param name="action_feedback_topic" value="/rosplan_plan_dispatcher/action_feedback" />
    </node> -->

</launch>