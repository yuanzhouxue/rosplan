<?xml version="1.0" encoding="UTF-8"?>
<launch>

    <arg name="action_dispatch_topic" default="/rosplan_plan_dispatcher/action_dispatch" />
    <arg name="action_feedback_topic" default="/rosplan_plan_dispatcher/action_feedback" />
    <arg name="sensor_dispatch_topic" default="/rosplane_sensor_interface/sensor_dispatch" />
    <arg name="sensor_feedback_topic" default="/rosplane_sensor_interface/sensor_feedback" />

    <!-- ROSPlan -->
    <include file="$(find rosplan_planning_system)/launch/rosplane_interfaced_planning_system_old.launch">
        <arg name="domain_path" value="$(find tiago_transfer_demo)/pddls/graspDomain.pddl" />
        <!-- load a particular initial state into KB at startup (optional) -->
        <!-- we leave it empty because in this demo we use a bash script to upload information to KB, not a pddl problem -->
        <arg name="problem_path" value="$(find tiago_transfer_demo)/pddls/graspProblem.pddl" />
        <!-- automatically generated pddl problem will be created here -->
        <arg name="autom_gen_problem_path" value="$(find tiago_transfer_demo)/output/graspProblem_autogen.pddl" />
        <!-- planner will produce output plan and write to this location -->
        <arg name="data_path" value="$(find tiago_transfer_demo)/output/" />
    </include>

    <node name="action_pick" type="pickup_action_node" pkg="tiago_despot" output="screen">
        <param name="knowledge_base" value="rosplan_knowledge_base" />
        <param name="pddl_action_name" value="pick" />
        <param name="action_dispatch_topic" value="$(arg action_dispatch_topic)" />
        <param name="action_feedback_topic" value="$(arg action_feedback_topic)" />
    </node>

    <node name="action_place" type="place_action_node" pkg="tiago_despot" output="screen">
        <param name="knowledge_base" value="rosplan_knowledge_base" />
        <param name="pddl_action_name" value="place" />
        <param name="action_dispatch_topic" value="$(arg action_dispatch_topic)" />
        <param name="action_feedback_topic" value="$(arg action_feedback_topic)" />
    </node>

    <node name="action_goto" type="goto_action_node" pkg="tiago_despot" output="screen">
        <rosparam file="$(find tiago_transfer_demo)/config/waypoints.yaml" command="load" />
        <param name="knowledge_base" value="rosplan_knowledge_base" />
        <param name="wp_namespace" value="/action_goto/tiago_pick_nav_waypoints" />
        <param name="pddl_action_name" value="goto_waypoint" />
        <param name="action_dispatch_topic" value="$(arg action_dispatch_topic)" />
        <param name="action_feedback_topic" value="$(arg action_feedback_topic)" />
    </node>

    <node name="sensor_inhand" type="in_hand_sensor" pkg="tiago_despot" output="screen">
        <param name="knowledge_base" value="rosplan_knowledge_base" />
        <param name="pred_name" value="in_hand" />
        <param name="sensor_dispatch_topic" value="$(arg sensor_dispatch_topic)" />
        <param name="sensor_feedback_topic" value="$(arg sensor_feedback_topic)" />
    </node>

    <include file="$(find tiago_transfer_demo)/launch/tiago_pick.launch">
        <arg name="pddl_action_name" value="pick" />
    </include>

</launch>