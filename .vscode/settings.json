{
    "pddlParser.executableOrService": "~/rosplan_ws/src/ROSPlan/rosplan_dependencies/VAL/parser",
    "pddlParser.executableOptions": "$(domain) $(problem)",
    "pddl.validatorPath": "~/rosplan_ws/src/ROSPlan/rosplan_dependencies/VAL/validate",
    "redhat.telemetry.enabled": false,
    "python.defaultInterpreterPath": "~/anaconda3/bin/python",
    "pddl.selectedPlanner": "POPF",
    "pddl.planners": [
        {
            "kind": "popf",
            "canConfigure": true,
            "path": "~/rosplan_ws/src/ROSPlan/rosplan_planning_system/common/bin/popf",
            "syntax": "$(planner) $(options) $(domain) $(problem)",
            "title": "POPF"
        }
    ],
    "files.exclude": {
        "**/.git": true,
        "**/.svn": true,
        "**/.hg": true,
        "**/CVS": true,
        "**/.DS_Store": true,
        "logs": true,
        "build": true,
        ".catkin_tools": true,
        "src/ROSPlan/rosplan_rqt": true,
        "src/ROSPlan/rosplan_dependencies": true,
        "**/*.class": true,
    },
    "files.watcherExclude": {
        "**/.git": true,
        "**/.svn": true,
        "**/.hg": true,
        "**/CVS": true,
        "**/.DS_Store": true,
        "logs": true,
        "build": true,
        ".catkin_tools": true,
        "src/ROSPlan/rosplan_rqt": true,
        "src/ROSPlan/rosplan_dependencies": true,
        "src/ROSPlan/rosplan_dispatch_msgs": true,
        "src/ROSPlan/rosplan_knowledge_msgs": true,
        "src/rosplan_demos": true,
        "src/tiago": true,
        "**/*.class": true,
    },
    "git.ignoreLimitWarning": true,
    "python.autoComplete.extraPaths": [
        "~/rosplan_ws/devel/lib/python2.7/dist-packages",
        "/opt/ros/melodic/lib/python2.7/dist-packages"
    ],
    "python.analysis.extraPaths": [
        "~/rosplan_ws/devel/lib/python2.7/dist-packages",
        "/opt/ros/melodic/lib/python2.7/dist-packages"
    ],
    "files.associations": {
        "*.world": "xml",
        "*.rviz": "yaml",
        "array": "cpp",
        "string_view": "cpp",
        "hash_map": "cpp",
        "hash_set": "cpp",
        "slist": "cpp",
        "regex": "cpp",
        "cctype": "cpp",
        "clocale": "cpp",
        "cmath": "cpp",
        "csignal": "cpp",
        "cstdarg": "cpp",
        "cstddef": "cpp",
        "cstdio": "cpp",
        "cstdlib": "cpp",
        "cstring": "cpp",
        "ctime": "cpp",
        "cwchar": "cpp",
        "cwctype": "cpp",
        "atomic": "cpp",
        "strstream": "cpp",
        "*.tcc": "cpp",
        "bitset": "cpp",
        "chrono": "cpp",
        "cinttypes": "cpp",
        "complex": "cpp",
        "condition_variable": "cpp",
        "cstdint": "cpp",
        "deque": "cpp",
        "forward_list": "cpp",
        "list": "cpp",
        "unordered_map": "cpp",
        "unordered_set": "cpp",
        "vector": "cpp",
        "exception": "cpp",
        "algorithm": "cpp",
        "any": "cpp",
        "functional": "cpp",
        "optional": "cpp",
        "ratio": "cpp",
        "system_error": "cpp",
        "tuple": "cpp",
        "type_traits": "cpp",
        "fstream": "cpp",
        "initializer_list": "cpp",
        "iomanip": "cpp",
        "iosfwd": "cpp",
        "iostream": "cpp",
        "istream": "cpp",
        "limits": "cpp",
        "memory": "cpp",
        "mutex": "cpp",
        "new": "cpp",
        "ostream": "cpp",
        "numeric": "cpp",
        "sstream": "cpp",
        "stdexcept": "cpp",
        "streambuf": "cpp",
        "thread": "cpp",
        "cfenv": "cpp",
        "utility": "cpp",
        "typeindex": "cpp",
        "typeinfo": "cpp",
        "iterator": "cpp",
        "map": "cpp",
        "memory_resource": "cpp",
        "random": "cpp",
        "set": "cpp",
        "string": "cpp",
        "variant": "cpp",
        "codecvt": "cpp",
        "future": "cpp",
        "valarray": "cpp"
    },
    "python.pythonPath": "/usr/bin/python3",
    "C_Cpp.formatting": "vcFormat",
    "editor.detectIndentation": false,
    "C_Cpp.vcFormat.newLine.beforeElse": false,
    "C_Cpp.vcFormat.newLine.closeBraceSameLine.emptyFunction": true,
    "C_Cpp.vcFormat.newLine.closeBraceSameLine.emptyType": true,
    "C_Cpp.vcFormat.newLine.beforeOpenBrace.namespace": "sameLine",
    "C_Cpp.vcFormat.newLine.beforeOpenBrace.lambda": "sameLine",
    "C_Cpp.vcFormat.newLine.beforeOpenBrace.function": "sameLine",
    "C_Cpp.vcFormat.newLine.beforeOpenBrace.block": "sameLine",
    "C_Cpp.vcFormat.newLine.beforeOpenBrace.type": "sameLine"
}